<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:RS.Trading.ForexSimulator"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    x:Class="RS.Trading.ForexSimulator.MainWindow"
    mc:Ignorable="d"
    Title="Forex Simulator" Height="450" Width="800"
    DataContext="{Binding Main, Source={StaticResource Locator}}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoaded}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <DataTemplate x:Key="RightAlign">
            <TextBlock HorizontalAlignment="Right" Text="{Binding}" />
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="187*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ListBox Visibility="{Binding ElementName=ShowLogsCheckBox, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" Height="100" VerticalAlignment="Bottom" ItemsSource="{Binding Logs}" Grid.Row="2" />
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button Content="{Binding LockButtonCaption}" Command="{Binding ToggleLockCommand}" HorizontalAlignment="Left"
                    Margin="10,0,0,0" VerticalAlignment="Center" Width="90" />
            <Button Content="&lt;" Command="{Binding StepBackChartCommand}" HorizontalAlignment="Left"
                    Margin="10,0,0,0"
                    VerticalAlignment="Center" Width="30" FontWeight="Bold" />
            <Button Content="&gt;" Command="{Binding StepChartCommand}" HorizontalAlignment="Left" Margin="5,0,0,0"
                    VerticalAlignment="Center" Width="30" FontWeight="Bold" />
            <Button Content="Buy" Background="LightGreen" Command="{Binding BuyCommand}" HorizontalAlignment="Left"
                    Margin="30,0,0,0" VerticalAlignment="Center" Width="70" />
            <Button Content="Sell" Background="Red" Foreground="White" Command="{Binding SellCommand}"
                    HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Width="70" />
            <TextBlock Text="Lot: " Margin="10,0,0,0" VerticalAlignment="Center" />
            <xctk:DoubleUpDown Value="{Binding LotSize}" Height="20" Margin="10,10,0,10" VerticalAlignment="Center"
                               Width="66" Increment="0.01" Minimum="0.01" Maximum="20" />
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <CheckBox Content="Show Logs" Name="ShowLogsCheckBox" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"></CheckBox>
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock VerticalAlignment="Center" Margin="5,0,0,0" Text="Profit:" FontWeight="Bold" />
                <TextBlock VerticalAlignment="Center" Margin="5,0,25,0" Text="{Binding Profit, StringFormat=N2}"
                           FontWeight="Bold" />

                <TextBlock VerticalAlignment="Center" Margin="5,0,0,0" Text="Total P/L:" FontWeight="Bold" />
                <TextBlock VerticalAlignment="Center" Margin="5,0,25,0" Text="{Binding TotalPL, StringFormat=N2}"
                           FontWeight="Bold" />

                <TextBlock VerticalAlignment="Center" Margin="5,0,0,0" Text="Current P/L:" FontWeight="Bold" />
                <TextBlock VerticalAlignment="Center" Margin="5,0,5,0" Text="{Binding CurrentPL, StringFormat=N2}"
                           FontWeight="Bold" />
            </StackPanel>
            <ListView ItemsSource="{Binding OpenOrders}" Grid.Row="0">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.Resources>

                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn CellTemplate="{StaticResource RightAlign}" Header="Order" Width="60"
                                        DisplayMemberBinding="{Binding Model.OrderId}" />
                        <GridViewColumn Header="Type" Width="70" DisplayMemberBinding="{Binding Model.Type}" />
                        <GridViewColumn CellTemplate="{StaticResource RightAlign}" Header="Size" Width="70"
                                        DisplayMemberBinding="{Binding Model.Size}" />
                        <GridViewColumn Header="Open" Width="70" DisplayMemberBinding="{Binding Model.Open}" />
                        <GridViewColumn CellTemplate="{StaticResource RightAlign}" Header="SL" Width="70"
                                        DisplayMemberBinding="{Binding Model.SL}" />
                        <GridViewColumn CellTemplate="{StaticResource RightAlign}" Header="TP" Width="70"
                                        DisplayMemberBinding="{Binding Model.TP}" />
                        <GridViewColumn Header="P/L" Width="70">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding PL, StringFormat=N2}" TextAlignment="Right" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Close" Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="Close"
                                            Command="{Binding DataContext.CloseTradeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                            CommandParameter="{Binding}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>

    </Grid>
</Window>